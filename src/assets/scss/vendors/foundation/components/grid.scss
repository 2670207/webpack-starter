.grid-container {
  @include xy-grid-container;

}
.grid{
  @include xy-grid;
}
@mixin block-grid-classes($margin-grid: true, $padding-grid: true) {
  @if $padding-grid {
    @include -zf-each-breakpoint {
      @for $i from 1 through $xy-block-grid-max {
        .#{$-zf-size}-up-#{$i} {
          @include xy-grid-layout($n: $i, $selector: 'div', $gutter-type: padding, $output: (size));
        }
      }
    }
  }

  @if $margin-grid {
    @include -zf-each-breakpoint {
      @for $i from 1 through $xy-block-grid-max {
        @if(type-of($grid-margin-gutters) == 'map' and map-has-key($grid-margin-gutters, $-zf-size)) {
          @each $bp in -zf-breakpoints-less-than($-zf-size) {
            @if(map-has-key($grid-margin-gutters, $bp)) {
              .grid-margin-x.#{$bp}-up-#{$i} {
                @include xy-grid-layout($n: $i, $selector: 'div', $gutter-type: margin, $output: (size));
              }
            }
          }
        }
      }
      @for $i from 1 through $xy-block-grid-max {
        .grid.#{$-zf-size}-up-#{$i} {
          @include xy-grid-layout($n: $i, $selector: 'div', $gutter-type: margin, $output: (size));
        }
      }
    }
  }
}

@mixin xy-margin-grid-classes-custom(
  $gutter-position: left right,
  $vertical: false,
  $wrapping-selector: '.grid-margin-x'
){
  #{$wrapping-selector} {
    @include xy-gutters($negative: true, $gutter-position: $gutter-position);
    > div {
      @include xy-cell($vertical: $vertical, $output: (size gutters));
    }

    @include -zf-each-breakpoint() {
      @if(type-of($grid-margin-gutters) == 'map' and map-has-key($grid-margin-gutters, $-zf-size) and $-zf-size != $-zf-zero-breakpoint) {
        > div {
          @include xy-cell($vertical: $vertical, $output: (size gutters));
        }
      }
    }

    @include -zf-each-breakpoint() {
      @if(type-of($grid-margin-gutters) == 'map' and map-has-key($grid-margin-gutters, $-zf-size)) {
        @each $bp in -zf-breakpoints-less-than($-zf-size) {
          @include -xy-breakpoint-cell-classes($bp, $-zf-size, $vertical);
        }
      }

      @include -xy-breakpoint-cell-classes($-zf-size, $-zf-size, $vertical);
    }
  }
}
@include xy-margin-grid-classes-custom($gutter-position: left right, $vertical: false, $wrapping-selector: '.grid');
@include block-grid-classes(true,false);
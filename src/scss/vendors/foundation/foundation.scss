
@import '~foundation-sites/scss/util/util';
@import 'variables';

@import "~foundation-sites/scss/foundation";
@include foundation-flex-classes;
@include foundation-visibility-classes;

.container {
   @include xy-grid-container;
}
.grid{
  @include xy-grid;
}
@mixin block-grid-classes($margin-grid: true, $padding-grid: true) {
        @if $padding-grid {
                @include -zf-each-breakpoint {
                        @for $i from 1 through $xy-block-grid-max {
                                .#{$-zf-size}-up-#{$i} {
                                        @include xy-grid-layout($n: $i, $selector: '.cell', $gutter-type: padding, $output: (size));
                                }
                        }
                }
        }

        @if $margin-grid {
                @include -zf-each-breakpoint {
                        @for $i from 1 through $xy-block-grid-max {
                                // This is purely for responsive gutters - the margin grid has to go back and adjust widths (or heights)
                                // for prior breakpoints based on the responsive gutter.
                                @if(type-of($grid-margin-gutters) == 'map' and map-has-key($grid-margin-gutters, $-zf-size)) {
                                        @each $bp in -zf-breakpoints-less-than($-zf-size) {
                                                @if(map-has-key($grid-margin-gutters, $bp)) {
                                                        .grid-margin-x.#{$bp}-up-#{$i} {
                                                                @include xy-grid-layout($n: $i, $selector: '.cell', $gutter-type: margin, $output: (size));
                                                        }
                                                }
                                        }
                                }
                        }
                        @for $i from 1 through $xy-block-grid-max {
                                .grid.#{$-zf-size}-up-#{$i} {
                                        @include xy-grid-layout($n: $i, $selector: '.cell', $gutter-type: margin, $output: (size));
                                }
                        }
                }
        }
}
@include xy-margin-grid-classes($gutter-position: left right, $vertical: false, $wrapping-selector: '.grid')
@include block-grid-classes(true,false)




